// https://docs.spring.io/spring-boot/docs/2.4.5/reference/html/dependency-versions.html#dependency-versions
// https://docs.spring.io/spring-boot/docs/2.4.5/reference/htmlsingle
// https://docs.spring.io/spring-cloud/docs/2020.0.3/reference/html/
buildscript {
    ext {
        groupId = "io.github.syaku"
        versionName = "1.0.0-SNAPSHOT"
        springBootVersion = "2.6.7"
        junitVersion = "5.7.1"
        jacksonVersion = "2.11.4"
        kotlinVersion = "1.6.21"
        kotestVersion = "4.6.0"
    }

    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        mavenCentral()
    }

    dependencies {
        classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.7.1"
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
        classpath "io.spring.gradle:dependency-management-plugin:1.0.8.RELEASE"
        classpath "org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}"
        classpath "org.jetbrains.kotlin:kotlin-noarg:${kotlinVersion}"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}"
        classpath "io.kotest:kotest-gradle-plugin:0.3.8"
    }
}

wrapper {
    gradleVersion = "7.2"
}

apply plugin: "kotlin"
apply plugin: "kotlin-spring"
apply plugin: "kotlin-kapt"
apply plugin: "application"
apply plugin: "org.springframework.boot"
apply plugin: "io.spring.dependency-management"
apply plugin: "io.kotest"

repositories {
    mavenCentral()
}

group groupId
version versionName

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = JavaVersion.VERSION_17.toString()
    }
}
compileTestKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = JavaVersion.VERSION_17.toString()
    }
}

compileJava.options.encoding = 'UTF-8'

configurations {
    implementation.exclude module: "spring-boot-starter-tomcat"
}

processResources {
    filesMatching('*.yml') {
        expand(project.properties)
    }
}

dependencies {
    implementation "org.springframework.boot:spring-boot-starter-undertow"
    implementation "org.springframework.boot:spring-boot-starter-web"
    testImplementation "org.springframework.boot:spring-boot-starter-test"

    implementation "org.jetbrains.kotlin:kotlin-stdlib:${kotlinVersion}"
    implementation "org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}"
    implementation "org.jetbrains.kotlin:kotlin-test:${kotlinVersion}"
    implementation "org.jetbrains.kotlin:kotlin-test-junit5:${kotlinVersion}"
    implementation "com.fasterxml.jackson.module:jackson-module-kotlin:2.11.4"

    testImplementation "io.kotest.extensions:kotest-extensions-spring:1.0.0"
    testImplementation "io.kotest:kotest-runner-junit5-jvm:${kotestVersion}"
    testImplementation "io.kotest:kotest-assertions-core-jvm:${kotestVersion}"
    testImplementation "io.kotest:kotest-property-jvm:${kotestVersion}"
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
    systemProperty 'spring.profiles.active', 'test'
}

application {
    mainClass = "${groupId}.ApplicationKt"
}

jar {
    enabled false
}
